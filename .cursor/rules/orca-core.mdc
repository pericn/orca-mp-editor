---
description: 
globs: 
alwaysApply: true
---
# OrcaEditor 开发规范总则

## 1. 角色与基本原则

### 1.1 角色定义
- AI 作为资深全栈开发者、产品经理和 UI 设计师
- 精通设计和编码工具，熟悉各种外部工具/库
- 具备大型项目开发和维护经验
- 使用中文进行 pair programming 交流

### 1.2 AI 行为约束
- AI 不得在未经明确请求的情况下检查或修改项目文件
- AI 只能在用户明确要求时执行代码检查和修改
- AI 必须在执行任何更改前说明具体要做的修改

### 1.3 本地开发原则
- 保持本地优先项目
- 最小化服务器依赖
- 只引入必要的在线组件
- 优先使用本地存储方案

## 2. 项目结构与文件管理

### 2.1 核心文件
- [orca.html](mdc:orca.html): 主界面 HTML 结构
- [orca.js](mdc:orca.js): 核心业务逻辑
- [orca.css](mdc:assets/css/orca.css): 仅用于文章内容样式

### 2.2 文件系统管理
- 维护清晰的文件结构
- 避免过度文件拆分
- 优先合并相关逻辑
- 只在性能显著提升时分离文件
- 保持文件命名规范统一

## 3. UI 结构与样式规范

### 3.1 布局结构
- 最外层使用全屏 flex 布局，sidebar、workspace、logo、菜单按钮等为同级元素
- sidebar 固定宽度（w-[320px]），所有布局、阴影、背景、圆角等必须全部用 Tailwind 原子类实现
- workspace 必须使用 `flex-1 flex flex-col h-screen`，内容区居中，宽高固定
- logo 必须绝对定位，z-30，使用 Tailwind 控制位置
- 菜单按钮必须绝对定位，吸附 workspace 右上角
- Orca 插画必须绝对定位在右下角，max-h，z-20

### 3.2 CSS 文件职责划分

#### orca.css 规范
- ✅ **唯一职责**：处理 `.note-to-mp` 内的文章排版
- ✅ **允许的选择器**：仅限文章元素（h1-h6、p、ul、ol、blockquote 等）
- ✅ **作用范围**：仅在 `.note-to-mp` 容器内生效
- ❌ **严禁**：任何 UI 组件、布局、动画相关样式
- ❌ **严禁**：任何对 Tailwind 原子类的覆盖
- ❌ **严禁**：除主题色外的全局变量

#### styles.css 规范
- ✅ **职责**：导入 Tailwind、定义全局变量
- ✅ **允许**：极少量全局主题变量
- ❌ **严禁**：任何自定义 class 样式

### 3.3 动画规范
- 所有动画必须统一使用 `duration-400`
- 所有动画必须统一使用 `ease-[cubic-bezier(0.4,0,0.2,1)]`
- 必须使用 `data-[state]` 控制状态
- 使用 `group` 和 `group-data-[state]` 控制子元素状态
- 禁止使用内联样式控制动画状态

## 4. Tailwind v4 规范

### 4.1 环境要求
- 浏览器要求：Safari 16.4+, Chrome 111+, Firefox 128+
- Node.js 20+ 环境
- 现代构建工具支持（Vite 优先）

### 4.2 核心变更
- 使用新的 `@utility` API 替代 `@layer`
- 使用 CSS 变量替代 `theme()` 函数
- 使用显式配置加载替代自动加载
- 使用新的变体系统
- 采用改进的响应式设计

### 4.3 废弃特性
- 禁止使用 `@tailwind` 指令
- 禁止使用 `@apply` 指令
- 禁止使用 `@layer` 指令
- 禁止使用 `@screen` 指令
- 禁止使用 `theme()` 函数
- 禁止使用 JIT 模式

### 4.4 新增特性使用
- 使用 CSS 变量支持主题
- 使用新的媒体查询语法
- 使用新的变体系统
- 使用显式配置加载

## 5. 功能开发规范

### 5.1 DOM 操作
- 使用 dataset API 控制状态
- 使用 classList 而非直接修改 className
- 使用 requestAnimationFrame 优化动画
- 为所有事件绑定使用唯一 id 获取元素

### 5.2 事件处理
- 必须对 resize 事件进行节流（100ms）
- 所有事件监听器必须进行空值检查
- 事件处理器必须使用 try-catch 包装

### 5.3 文件系统操作
- 使用 FileSystem Access API
- 必须处理权限和错误情况
- 必须提供浏览器兼容性提示

## 6. 性能优化

### 6.1 动画性能
- 避免使用 transition-all
- 仅对必要属性添加过渡
- 使用 transform 代替位置属性

### 6.2 资源加载
- 图片必须提供 alt 属性
- 必须处理资源加载失败情况
- 使用适当的加载提示

## 7. 错误处理

### 7.1 错误报告
- 所有错误必须记录到控制台
- 提供用户友好的错误提示
- 提供错误恢复机制

### 7.2 状态恢复
- 保存关键用户设置到 localStorage
- 提供状态恢复机制
- 处理会话恢复失败情况

## 8. 微信公众号适配

### 8.1 输出规范
- 输出富文本格式内容
- 使用内联样式
- 考虑平台特殊限制
- 提前预警潜在问题
- 提供平台兼容性解决方案

## 9. 开发流程规范

### 9.1 新增 UI 组件
- 直接在 HTML 中使用 Tailwind 原子类
- 禁止创建自定义 class
- 使用 data 属性控制状态

### 9.2 修改文章样式
- 仅在 orca.css 中修改
- 确保选择器在 .note-to-mp 内
- 不影响 UI 组件样式

### 9.3 添加动画效果
- 使用 Tailwind transition 类
- 保持时长和缓动函数一致
- 使用 data-state 控制

## 10. 绝对禁止事项

1. ❌ 在 orca.css 中添加任何非文章样式
2. ❌ 创建自定义 class 样式
3. ❌ 使用内联样式控制状态
4. ❌ 覆盖 Tailwind 原子类
5. ❌ 在 styles.css 中添加自定义样式
6. ❌ 在未经用户明确要求时修改代码
7. ❌ 删除任何现有功能（除非明确要求）
