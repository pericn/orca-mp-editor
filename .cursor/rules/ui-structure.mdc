---
description: 
globs: *.css,orca.js
alwaysApply: false
---
# UI Structure Guide

## Main Layout
The main layout is defined in [orca.html](mdc:orca.html) with the following structure:

### Container Hierarchy
1. Root container: Full screen flex layout
   ```html
   <div class="relative w-screen h-screen flex overflow-hidden">
   ```

2. Logo: Absolutely positioned
   ```html
   <div style="position:absolute; left:27px; top:13px; z-index:30; width:236px;">
   ```

3. Sidebar: Fixed width with constraints
   ```html
   <aside class="w-1/5 min-w-[200px] max-w-[320px] h-screen">
   ```

4. Workspace: Main content area
   ```html
   <div id="workspace" class="flex-1 flex flex-col h-screen">
   ```

### Key Components
1. Header
   - Fixed height: 80px
   - Background: #FFFEFA
   - Bottom border
   - Shadow effect

2. Content Area
   - Fixed dimensions: 393x852px
   - Centered horizontally
   - White background
   - Custom shadow
   - No border radius

3. Menu Buttons
   - Positioned absolutely
   - Attached to content area
   - Gap: 1rem between buttons
   - Z-index: 30

4. Orca Illustration
   - Positioned absolutely
   - Bottom right corner
   - Max height: 420px
   - Z-index: 20

## Custom Components
1. Select Folder Button
   - Width: 247px
   - Height: 59px
   - Border radius: 20.7px
   - Background: #34A5DD
   - Custom shadow and hover effects

2. Toast Notification
   - Fixed position
   - Bottom right corner
   - Dark background
   - Rounded corners
   - Z-index: 50

   # OrcaEditor 前端布局与性能优化规则

## 1. 布局结构
- sidebar、sidebar-btn、workspace 三者为最外层 flex 容器的同级元素。
- sidebar 固定宽度（w-[320px]），收起时用 `position: absolute; left: 0; transform: translateX(-100%)` 脱离文档流。
- workspace 始终 `flex-1`，不设置 width，内容区自动自适应。
- content 区域用 `mx-auto` 或 `margin-inline: auto` 居中，动画用 `transition-margin` 或 `transition-all`。

## 2. sidebar-btn 悬浮与动画
- sidebar-btn 放在 sidebar 内部，绝对定位 `right-[-24px]`，hover 时 `right-[-8px]`，始终悬浮在 sidebar 右侧超出 50% 按钮宽度。
- hover 区域用 `.sidebar-btn::after` 扩大，样式写在 [styles.css](mdc:assets/css/styles.css)。
- 不要用 JS 动态设置按钮 left/right，位置完全由 CSS 控制。

## 3. 动画与性能
- 所有动画 transition 尽量用 Tailwind 内联类或 CSS class，不在 JS 里反复 set transition。
- 只对需要动画的属性加 transition（如 margin、transform），避免 `transition-all` 影响性能。
- sidebar、logo、sidebar-btn 的动画只在切换时设置 transform，避免多余的 style 操作。

## 4. resize 事件节流
- window.resize 事件必须节流（如 setTimeout 100ms），防止拖动窗口时频繁重排导致卡顿。

## 5. 响应式与移动端
- 移动端 sidebar 隐藏，logo 缩放，content 居中，相关样式和动画用 class 控制，JS 只做必要的 style 切换。

## 6. 内容区动画
- content 区域在 workspace 变宽时自动居中，margin 变化有动画。
- 推荐用 `transition-margin duration-200` 或 `transition-all duration-200`，不要用 JS 动态设置 transition。

## 7. 主题与 UI 样式分离
- 内容区排版、主题相关样式写在 [orca.css](mdc:assets/css/orca.css)。
- UI 控件、全局交互相关样式写在 [styles.css](mdc:assets/css/styles.css)。

## 8. 其它
- 不要在 JS 里频繁操作 DOM style，能用 class 就用 class。
- 保持所有动画、布局、hover 行为流畅、无闪烁、无卡顿。
